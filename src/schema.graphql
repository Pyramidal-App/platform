enum CallOutcome {
  DIDNT_ANSWER
  NOT_INTERESTED
  SUCCESS
  DONT_CALL
}

enum TaskType {
  CALL
  VISIT
}

enum TaskStatus {
  PENDING
  COMPLETED
  OVERDUE
  CANCELLED
}

type User {
  id: ID!
  name: String
  email: String!
  avatarUrl: String
  customers: [Customer]!
  team: Team
  tasks: [Task]!
}

type Customer {
  id: ID!
  name: String!
  userId: ID!
  user: User!
  phoneNumbers: [PhoneNumber]!
  addresses: [Address]!
  calls: [Call]!
  tasks: [Task]!
}

type PhoneNumber {
  id: ID!
  customers: [Customer]!
  countryCode: String!
  areaCode: String!
  number: String!
}

type Address {
  id: ID!
  customer: Customer!
  label: String!
  googlePlaceId: String!
  lat: Float!
  lng: Float!
  notes: String!
}

type TelemarketingSheet {
  id: ID!
  countryCode: Int!
  areaCode: Int!
  firstNumbers: Int!
  numberInfo: [TelemarketingSheetNumberInfo!]!
}

type TelemarketingSheetNumberInfo {
  lastNumbers: Int!
  hasContact: Boolean!
  teamHasContact: Boolean!
  hasPendingTasks: Boolean!
  dontCall: Boolean!
}

type Call {
  id: ID!
  phoneNumber: PhoneNumber!
  customer: Customer!
  user: User!
  notes: [Note]!
  outcome: CallOutcome!
  dateTime: String!
}

type Note {
  id: ID!
  user: User!
  customer: Customer
  phoneNumber: PhoneNumber
  call: Call
  body: String!
}

type Task {
  id: ID!
  customer: Customer!
  user: User!
  triggererCall: Call!
  taskType: TaskType!
  dueDate: String!
  status: TaskStatus!
}

type Team {
  id: ID!
  name: String!
  memberships: [TeamMembership]!
  members: [User]!
}

type TeamMembership {
  id: ID!
  team: Team!
  user: User!
  admin: Boolean
}

type UserAndToken {
  token: String!
  user: User!
}

type GenericActionResponse {
  success: Boolean!
}

input LogInWithGoogleInput {
  accessToken: String!
  idToken: String!
}

input TelemarketingSheetIdentifiers {
  countryCode: String!
  areaCode: String!
  firstNumbers: String!
}

input PhoneNumberIdentifiers {
  countryCode: String!
  areaCode: String!
  number: String!
}

input CreateCustomerInput {
  name: String!
  phoneNumberCountryCode: String!
  phoneNumberAreaCode: String!
  phoneNumber: String!
  addressGooglePlaceId: String!
  addressLabel: String!
  addressNotes: String
  addressLat: Float!
  addressLng: Float!
}

input UpdateCustomerInput {
  id: ID!
  name: String!
}

input UpdateAddressInput {
  id: ID!
  googlePlaceId: String
  label: String
  notes: String
  lat: Float
  lng: Float
}

input CreateCallInput {
  phoneNumberId: ID!
  customerId: ID!
  outcome: CallOutcome!
  dateTime: String!
  notes: String
}

input CreateTaskInput {
  customerId: ID!
  triggererCallId: ID!
  taskType: TaskType!
  dueDate: String
}

input CreateTeamInput {
  name: String!
  members: String!
}

input InviteToTeamInput {
  teamId: ID!
  email: String!
}

input UpdateCurrentUserInput {
  name: String!
}

type Mutation {
  logInWithGoogle(input: LogInWithGoogleInput!): UserAndToken!
  findOrCreateTelemarketingSheet(input: TelemarketingSheetIdentifiers!): TelemarketingSheet!
  createCustomer(input: CreateCustomerInput!): Customer!
  updateCustomer(input: UpdateCustomerInput!): Customer!
  updateAddress(input: UpdateAddressInput!): Address!
  createCall(input: CreateCallInput!): Call!
  createTask(input: CreateTaskInput!): Task!
  createTeam(input: CreateTeamInput!): Team!
  inviteToTeam(input: InviteToTeamInput!): TeamMembership!
  updateCurrentUser(input: UpdateCurrentUserInput!): User!
}

type Query {
  telemarketingSheet(input: TelemarketingSheetIdentifiers!): TelemarketingSheet
  telemarketingSheets: [TelemarketingSheet]
  customers(input: PhoneNumberIdentifiers!): [Customer]!
  currentUser: User
}

